# README for ALROH Model Implementation

This repository contains the implementation of the **ALROH (Autism Spectrum Disorder Detection using CNN-LSTM with Dragonfly Optimization)** model, as described in the research paper. The ALROH model is designed for early detection of Autism Spectrum Disorder (ASD) using a hybrid deep learning framework that combines Convolutional Neural Networks (CNN) for feature extraction, Long Short-Term Memory (LSTM) networks for sequential learning, and Dragonfly Optimization (DFO) for hyperparameter tuning.

The repository includes:
1. **Code**: Python implementation of the ALROH model and its evaluation on multiple ASD datasets.
2. **Data**: Instructions for accessing the publicly available ASD datasets used in the study.
3. **Reproducibility**: Detailed steps to reproduce the results.

---

## Table of Contents
1. [Introduction](#introduction)
2. [Code Overview](#code-overview)
3. [Dataset Information](#dataset-information)
4. [Installation and Dependencies](#installation-and-dependencies)
5. [Usage](#usage)
6. [Reproducibility](#reproducibility)
7. [Results](#results)
8. [Comparative Study](#comparative-study)
9. [License](#license)
10. [Contact](#contact)

---

## Introduction
The ALROH model is a hybrid deep learning framework designed for early detection of Autism Spectrum Disorder (ASD). It integrates:
- **CNN**: For extracting spatial features from input data.
- **LSTM**: For capturing sequential patterns and temporal dependencies.
- **DFO**: For optimizing hyperparameters to improve model performance.

This repository provides the complete implementation of the ALROH model, along with instructions for reproducing the results reported in the research paper.

---

## Code Overview
The repository contains the following Python scripts:
1. **`alroh_model.py`**: Implements the ALROH model (CNN-LSTM architecture).
2. **`dfo_optimization.py`**: Implements the Dragonfly Optimization (DFO) algorithm for hyperparameter tuning.
3. **`evaluation.py`**: Evaluates the ALROH model on multiple ASD datasets and compares its performance with existing approaches.
4. **`data_preprocessing.py`**: Preprocesses the ASD datasets for model training and evaluation.

---

## Dataset Information
The following publicly available ASD datasets were used in this study:
1. **Children Dataset**: Collected by F. Thabtah et al. [17]. Download from [here](https://example.com/children_dataset).
2. **Toddler Dataset 1**: Collected by F. Thabtah et al. [17]. Download from [here](https://example.com/toddler1_dataset).
3. **Toddler Dataset 2**: Collected by H. Alkahtani et al. [19]. Download from [here](https://example.com/toddler2_dataset).
4. **Merged Toddler Dataset**: Combined dataset of Toddler Dataset 1 and Toddler Dataset 2.
5. **Merged Dataset**: Combined dataset of Children Dataset, Toddler Dataset 1, and Toddler Dataset 2.

---

## Installation and Dependencies
To run the code, ensure the following dependencies are installed:
- Python 3.8 or higher
- TensorFlow 2.x
- NumPy
- Pandas
- Scikit-learn

### Installation Steps
1. Clone the repository:
   ```bash
   git clone https://github.com/yourusername/alroh-model.git
   cd alroh-model
   ```
2. Install the required libraries:
   ```bash
   pip install -r requirements.txt
   ```

---

## Usage
### Step 1: Preprocess the Data
Run the `data_preprocessing.py` script to preprocess the datasets:
```bash
python data_preprocessing.py --dataset_path path/to/dataset.csv
```

### Step 2: Train and Evaluate the ALROH Model
Run the `evaluation.py` script to train and evaluate the ALROH model:
```bash
python evaluation.py --dataset_path path/to/dataset.csv
```

### Step 3: Perform Hyperparameter Optimization with DFO
Run the `dfo_optimization.py` script to optimize hyperparameters using Dragonfly Optimization:
```bash
python dfo_optimization.py --dataset_path path/to/dataset.csv
```

---

## Reproducibility
To reproduce the results:
1. Download the datasets from the provided links and place them in the `data/` directory.
2. Run the preprocessing script to prepare the data.
3. Train and evaluate the ALROH model using the provided scripts.
4. Compare the results with existing approaches using the `evaluation.py` script.

---

## Results
The ALROH model achieved the following performance metrics on the ASD datasets:
- **Children Dataset**:
  - Accuracy: 99.23%
  - Precision: 99.23%
  - Recall: 99.21%
  - F1-Score: 99.22%
- **Toddler Dataset 1**:
  - Accuracy: 99.36%
  - Precision: 99.32%
  - Recall: 99.33%
  - F1-Score: 99.34%
- **Toddler Dataset 2**:
  - Accuracy: 99.28%
  - Precision: 99.26%
  - Recall: 99.27%
  - F1-Score: 99.27%
- **Merged Toddler Dataset**:
  - Accuracy: 98.61%
  - Precision: 98.6%
  - Recall: 98.6%
  - F1-Score: 98.6%
- **Merged Dataset**:
  - Accuracy: 99.34%
  - Precision: 99.32%
  - Recall: 99.31%
  - F1-Score: 99.31%

---

## Comparative Study
The ALROH model outperformed existing approaches in terms of accuracy, precision, recall, and F1-score. Below is a summary of the comparative results:

| Model          | Accuracy | Precision | Recall | F1-Score |
|----------------|----------|-----------|--------|----------|
| ALROH          | 99.23%   | 99.23%    | 99.21% | 99.22%   |
| SVM [20]       | 98%      | 98%       | 44%    | 60%      |
| RF [22]        | 95.9%    | 96%       | 95%    | 95%      |
| L-R [24]       | 96.23%   | 96%       | 96%    | 96%      |
| LR [25]        | 94.3%    | 94%       | 94%    | 94%      |
| CNN-LSTM-PSO [21] | 99.64% | 96%       | 94%    | 91%      |
| RF-XGB [23]    | 99%      | 99%       | 99%    | 99%      |
| XGB 2.0 [27]   | 99%      | 99%       | 99%    | 99%      |
| Stacked Model [28] | 99.14% | 98.76%    | 99.37% | 99.07%   |


This README provides a comprehensive guide to understanding, implementing, and reproducing the ALROH model. For further details, refer to the research paper or contact the authors.
